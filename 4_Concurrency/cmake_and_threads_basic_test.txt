#include <iostream>
#include <thread>
#include <mutex>
#include <vector>
#include <chrono>

std::mutex _mutex;

int main()
{
    std::vector<std::thread> threads;

    for (int i = 0; i < 5; ++i)
    {
        threads.emplace_back(std::thread([i]() {
            _mutex.lock();
            std::cout << "bonjor #" << i << "!" << std::endl;
            //std::this_thread::sleep_for(std::chrono::milliseconds(1000));
            _mutex.unlock();
        }));
        
    }

    for (auto &t : threads)
    {
        t.join();
    }

    return 0;
}
